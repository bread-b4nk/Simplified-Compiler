Terminals unused in grammar

    ARITH
    THREE
    NONPRIO
    PRIO_SHIFT


State 22 conflicts: 1 shift/reduce
State 45 conflicts: 7 shift/reduce
State 47 conflicts: 7 shift/reduce
State 117 conflicts: 1 shift/reduce
State 158 conflicts: 7 shift/reduce


Grammar

    0 $accept: code_statements $end

    1 code_statements: code_statements code_statement
    2                | code_statements if_else_block
    3                | code_statements while_block
    4                | code_statements func_block
    5                | func_block
    6                | if_else_block
    7                | while_block
    8                | code_statement

    9 code_statement: assignment
   10               | var_declaration
   11               | return
   12               | kfunc_call
   13               | func_declaration
   14               | kfunc_declaration

   15 if_else_block: if_statement '{' code_statements '}' else_block
   16              | if_statement '{' code_statements '}'
   17              | if_statement code_statements

   18 else_block: ELSE code_statements
   19           | ELSE '{' code_statements '}'

   20 while_block: while_statement '{' code_statements '}'
   21            | while_statement code_statements

   22 func_block: types VAR '(' DATATYPE VAR ')' '{' code_statements '}'
   23           | types VAR '(' ')' '{' code_statements '}'

   24 types: EXTERN types
   25      | types DATATYPE
   26      | DATATYPE

   27 if_statement: IF '(' bool_expression ')'

   28 while_statement: WHILE '(' bool_expression ')'

   29 arith_expression: add_expr
   30                 | sub_expr
   31                 | mul_expr
   32                 | div_expr

   33 add_expr: VAR '+' VAR
   34         | VAR '+' NUM
   35         | NUM '+' NUM
   36         | NUM '+' VAR

   37 sub_expr: VAR '-' VAR
   38         | VAR '-' NUM
   39         | NUM '-' NUM
   40         | NUM '-' VAR

   41 mul_expr: VAR '*' VAR
   42         | VAR '*' NUM
   43         | NUM '*' NUM
   44         | NUM '*' VAR

   45 div_expr: VAR '/' VAR
   46         | VAR '/' NUM
   47         | NUM '/' NUM
   48         | NUM '/' VAR

   49 bool_expression: lt_expr
   50                | gt_expr
   51                | leq_expr
   52                | geq_expr
   53                | eq_expr

   54 lt_expr: VAR '<' VAR
   55        | VAR '<' NUM
   56        | NUM '<' NUM
   57        | NUM '<' VAR

   58 gt_expr: VAR '>' VAR
   59        | VAR '>' NUM
   60        | NUM '>' NUM
   61        | NUM '>' VAR

   62 leq_expr: VAR LEQ_OPTR VAR
   63         | VAR LEQ_OPTR NUM
   64         | NUM LEQ_OPTR NUM
   65         | NUM LEQ_OPTR VAR

   66 geq_expr: VAR GEQ_OPTR VAR
   67         | VAR GEQ_OPTR NUM
   68         | NUM GEQ_OPTR NUM
   69         | NUM GEQ_OPTR VAR

   70 eq_expr: VAR EQ_OPTR VAR
   71        | VAR EQ_OPTR NUM
   72        | NUM EQ_OPTR NUM
   73        | NUM EQ_OPTR VAR

   74 var_declaration: types VAR ';'

   75 func_declaration: types VAR '(' ')' ';'
   76                 | types VAR '(' types VAR ')' ';'

   77 kfunc_declaration: types KFUNC '(' ')' ';'
   78                  | types KFUNC '(' types ')' ';'

   79 kfunc_call: KFUNC '(' ')' ';'
   80           | KFUNC '(' VAR ')' ';'

   81 assignment: VAR '=' arith_expression ';'
   82           | VAR '=' NUM ';'
   83           | VAR '=' VAR ';'
   84           | VAR '=' kfunc_call

   85 return: RETURN ';'
   86       | RETURN '(' arith_expression ')' ';'
   87       | RETURN arith_expression ';'
   88       | RETURN '(' NUM ')' ';'
   89       | RETURN NUM ';'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 22 23 27 28 75 76 77 78 79 80 86 88
    ')' (41) 22 23 27 28 75 76 77 78 79 80 86 88
    '*' (42) 41 42 43 44
    '+' (43) 33 34 35 36
    '-' (45) 37 38 39 40
    '/' (47) 45 46 47 48
    ';' (59) 74 75 76 77 78 79 80 81 82 83 85 86 87 88 89
    '<' (60) 54 55 56 57
    '=' (61) 81 82 83 84
    '>' (62) 58 59 60 61
    '{' (123) 15 16 19 20 22 23
    '}' (125) 15 16 19 20 22 23
    error (256)
    DATATYPE <sname> (258) 22 25 26
    EXTERN (259) 24
    RETURN (260) 85 86 87 88 89
    KFUNC (261) 77 78 79 80
    WHILE (262) 28
    IF (263) 27
    ELSE (264) 18 19
    ARITH <ival> (265)
    NUM <ival> (266) 34 35 36 38 39 40 42 43 44 46 47 48 55 56 57 59 60 61 63 64 65 67 68 69 71 72 73 82 88 89
    VAR <ival> (267) 22 23 33 34 36 37 38 40 41 42 44 45 46 48 54 55 57 58 59 61 62 63 65 66 67 69 70 71 73 74 75 76 80 81 82 83 84
    LEQ_OPTR <sname> (268) 62 63 64 65
    GEQ_OPTR <sname> (269) 66 67 68 69
    EQ_OPTR <sname> (270) 70 71 72 73
    THREE (271)
    TWO (272)
    NONPRIO (273)
    PRIO_SHIFT (274)
    ONE (275)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    code_statements (34)
        on left: 1 2 3 4 5 6 7 8
        on right: 0 1 2 3 4 15 16 17 18 19 20 21 22 23
    code_statement (35)
        on left: 9 10 11 12 13 14
        on right: 1 8
    if_else_block (36)
        on left: 15 16 17
        on right: 2 6
    else_block (37)
        on left: 18 19
        on right: 15
    while_block (38)
        on left: 20 21
        on right: 3 7
    func_block (39)
        on left: 22 23
        on right: 4 5
    types (40)
        on left: 24 25 26
        on right: 22 23 24 25 74 75 76 77 78
    if_statement (41)
        on left: 27
        on right: 15 16 17
    while_statement (42)
        on left: 28
        on right: 20 21
    arith_expression (43)
        on left: 29 30 31 32
        on right: 81 86 87
    add_expr (44)
        on left: 33 34 35 36
        on right: 29
    sub_expr (45)
        on left: 37 38 39 40
        on right: 30
    mul_expr (46)
        on left: 41 42 43 44
        on right: 31
    div_expr (47)
        on left: 45 46 47 48
        on right: 32
    bool_expression (48)
        on left: 49 50 51 52 53
        on right: 27 28
    lt_expr (49)
        on left: 54 55 56 57
        on right: 49
    gt_expr (50)
        on left: 58 59 60 61
        on right: 50
    leq_expr (51)
        on left: 62 63 64 65
        on right: 51
    geq_expr (52)
        on left: 66 67 68 69
        on right: 52
    eq_expr (53)
        on left: 70 71 72 73
        on right: 53
    var_declaration (54)
        on left: 74
        on right: 10
    func_declaration (55)
        on left: 75 76
        on right: 13
    kfunc_declaration (56)
        on left: 77 78
        on right: 14
    kfunc_call (57)
        on left: 79 80
        on right: 12 84
    assignment (58)
        on left: 81 82 83 84
        on right: 9
    return (59)
        on left: 85 86 87 88 89
        on right: 11


State 0

    0 $accept: • code_statements $end

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    code_statements    go to state 8
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 1

   26 types: DATATYPE •

    $default  reduce using rule 26 (types)


State 2

   24 types: EXTERN • types

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2

    types  go to state 22


State 3

   85 return: RETURN • ';'
   86       | RETURN • '(' arith_expression ')' ';'
   87       | RETURN • arith_expression ';'
   88       | RETURN • '(' NUM ')' ';'
   89       | RETURN • NUM ';'

    NUM  shift, and go to state 23
    VAR  shift, and go to state 24
    '('  shift, and go to state 25
    ';'  shift, and go to state 26

    arith_expression  go to state 27
    add_expr          go to state 28
    sub_expr          go to state 29
    mul_expr          go to state 30
    div_expr          go to state 31


State 4

   79 kfunc_call: KFUNC • '(' ')' ';'
   80           | KFUNC • '(' VAR ')' ';'

    '('  shift, and go to state 32


State 5

   28 while_statement: WHILE • '(' bool_expression ')'

    '('  shift, and go to state 33


State 6

   27 if_statement: IF • '(' bool_expression ')'

    '('  shift, and go to state 34


State 7

   81 assignment: VAR • '=' arith_expression ';'
   82           | VAR • '=' NUM ';'
   83           | VAR • '=' VAR ';'
   84           | VAR • '=' kfunc_call

    '='  shift, and go to state 35


State 8

    0 $accept: code_statements • $end
    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block

    $end      shift, and go to state 36
    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 9

    8 code_statements: code_statement •

    $default  reduce using rule 8 (code_statements)


State 10

    6 code_statements: if_else_block •

    $default  reduce using rule 6 (code_statements)


State 11

    7 code_statements: while_block •

    $default  reduce using rule 7 (code_statements)


State 12

    5 code_statements: func_block •

    $default  reduce using rule 5 (code_statements)


State 13

   22 func_block: types • VAR '(' DATATYPE VAR ')' '{' code_statements '}'
   23           | types • VAR '(' ')' '{' code_statements '}'
   25 types: types • DATATYPE
   74 var_declaration: types • VAR ';'
   75 func_declaration: types • VAR '(' ')' ';'
   76                 | types • VAR '(' types VAR ')' ';'
   77 kfunc_declaration: types • KFUNC '(' ')' ';'
   78                  | types • KFUNC '(' types ')' ';'

    DATATYPE  shift, and go to state 41
    KFUNC     shift, and go to state 42
    VAR       shift, and go to state 43


State 14

   15 if_else_block: if_statement • '{' code_statements '}' else_block
   16              | if_statement • '{' code_statements '}'
   17              | if_statement • code_statements

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '{'       shift, and go to state 44

    code_statements    go to state 45
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 15

   20 while_block: while_statement • '{' code_statements '}'
   21            | while_statement • code_statements

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '{'       shift, and go to state 46

    code_statements    go to state 47
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 16

   10 code_statement: var_declaration •

    $default  reduce using rule 10 (code_statement)


State 17

   13 code_statement: func_declaration •

    $default  reduce using rule 13 (code_statement)


State 18

   14 code_statement: kfunc_declaration •

    $default  reduce using rule 14 (code_statement)


State 19

   12 code_statement: kfunc_call •

    $default  reduce using rule 12 (code_statement)


State 20

    9 code_statement: assignment •

    $default  reduce using rule 9 (code_statement)


State 21

   11 code_statement: return •

    $default  reduce using rule 11 (code_statement)


State 22

   24 types: EXTERN types •
   25      | types • DATATYPE

    DATATYPE  shift, and go to state 41

    DATATYPE  [reduce using rule 24 (types)]
    $default  reduce using rule 24 (types)


State 23

   35 add_expr: NUM • '+' NUM
   36         | NUM • '+' VAR
   39 sub_expr: NUM • '-' NUM
   40         | NUM • '-' VAR
   43 mul_expr: NUM • '*' NUM
   44         | NUM • '*' VAR
   47 div_expr: NUM • '/' NUM
   48         | NUM • '/' VAR
   89 return: RETURN NUM • ';'

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 52


State 24

   33 add_expr: VAR • '+' VAR
   34         | VAR • '+' NUM
   37 sub_expr: VAR • '-' VAR
   38         | VAR • '-' NUM
   41 mul_expr: VAR • '*' VAR
   42         | VAR • '*' NUM
   45 div_expr: VAR • '/' VAR
   46         | VAR • '/' NUM

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56


State 25

   86 return: RETURN '(' • arith_expression ')' ';'
   88       | RETURN '(' • NUM ')' ';'

    NUM  shift, and go to state 57
    VAR  shift, and go to state 24

    arith_expression  go to state 58
    add_expr          go to state 28
    sub_expr          go to state 29
    mul_expr          go to state 30
    div_expr          go to state 31


State 26

   85 return: RETURN ';' •

    $default  reduce using rule 85 (return)


State 27

   87 return: RETURN arith_expression • ';'

    ';'  shift, and go to state 59


State 28

   29 arith_expression: add_expr •

    $default  reduce using rule 29 (arith_expression)


State 29

   30 arith_expression: sub_expr •

    $default  reduce using rule 30 (arith_expression)


State 30

   31 arith_expression: mul_expr •

    $default  reduce using rule 31 (arith_expression)


State 31

   32 arith_expression: div_expr •

    $default  reduce using rule 32 (arith_expression)


State 32

   79 kfunc_call: KFUNC '(' • ')' ';'
   80           | KFUNC '(' • VAR ')' ';'

    VAR  shift, and go to state 60
    ')'  shift, and go to state 61


State 33

   28 while_statement: WHILE '(' • bool_expression ')'

    NUM  shift, and go to state 62
    VAR  shift, and go to state 63

    bool_expression  go to state 64
    lt_expr          go to state 65
    gt_expr          go to state 66
    leq_expr         go to state 67
    geq_expr         go to state 68
    eq_expr          go to state 69


State 34

   27 if_statement: IF '(' • bool_expression ')'

    NUM  shift, and go to state 62
    VAR  shift, and go to state 63

    bool_expression  go to state 70
    lt_expr          go to state 65
    gt_expr          go to state 66
    leq_expr         go to state 67
    geq_expr         go to state 68
    eq_expr          go to state 69


State 35

   81 assignment: VAR '=' • arith_expression ';'
   82           | VAR '=' • NUM ';'
   83           | VAR '=' • VAR ';'
   84           | VAR '=' • kfunc_call

    KFUNC  shift, and go to state 4
    NUM    shift, and go to state 71
    VAR    shift, and go to state 72

    arith_expression  go to state 73
    add_expr          go to state 28
    sub_expr          go to state 29
    mul_expr          go to state 30
    div_expr          go to state 31
    kfunc_call        go to state 74


State 36

    0 $accept: code_statements $end •

    $default  accept


State 37

    1 code_statements: code_statements code_statement •

    $default  reduce using rule 1 (code_statements)


State 38

    2 code_statements: code_statements if_else_block •

    $default  reduce using rule 2 (code_statements)


State 39

    3 code_statements: code_statements while_block •

    $default  reduce using rule 3 (code_statements)


State 40

    4 code_statements: code_statements func_block •

    $default  reduce using rule 4 (code_statements)


State 41

   25 types: types DATATYPE •

    $default  reduce using rule 25 (types)


State 42

   77 kfunc_declaration: types KFUNC • '(' ')' ';'
   78                  | types KFUNC • '(' types ')' ';'

    '('  shift, and go to state 75


State 43

   22 func_block: types VAR • '(' DATATYPE VAR ')' '{' code_statements '}'
   23           | types VAR • '(' ')' '{' code_statements '}'
   74 var_declaration: types VAR • ';'
   75 func_declaration: types VAR • '(' ')' ';'
   76                 | types VAR • '(' types VAR ')' ';'

    '('  shift, and go to state 76
    ';'  shift, and go to state 77


State 44

   15 if_else_block: if_statement '{' • code_statements '}' else_block
   16              | if_statement '{' • code_statements '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    code_statements    go to state 78
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 45

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   17 if_else_block: if_statement code_statements •

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    DATATYPE  [reduce using rule 17 (if_else_block)]
    EXTERN    [reduce using rule 17 (if_else_block)]
    RETURN    [reduce using rule 17 (if_else_block)]
    KFUNC     [reduce using rule 17 (if_else_block)]
    WHILE     [reduce using rule 17 (if_else_block)]
    IF        [reduce using rule 17 (if_else_block)]
    VAR       [reduce using rule 17 (if_else_block)]
    $default  reduce using rule 17 (if_else_block)

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 46

   20 while_block: while_statement '{' • code_statements '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    code_statements    go to state 79
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 47

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   21 while_block: while_statement code_statements •

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    DATATYPE  [reduce using rule 21 (while_block)]
    EXTERN    [reduce using rule 21 (while_block)]
    RETURN    [reduce using rule 21 (while_block)]
    KFUNC     [reduce using rule 21 (while_block)]
    WHILE     [reduce using rule 21 (while_block)]
    IF        [reduce using rule 21 (while_block)]
    VAR       [reduce using rule 21 (while_block)]
    $default  reduce using rule 21 (while_block)

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 48

   35 add_expr: NUM '+' • NUM
   36         | NUM '+' • VAR

    NUM  shift, and go to state 80
    VAR  shift, and go to state 81


State 49

   39 sub_expr: NUM '-' • NUM
   40         | NUM '-' • VAR

    NUM  shift, and go to state 82
    VAR  shift, and go to state 83


State 50

   43 mul_expr: NUM '*' • NUM
   44         | NUM '*' • VAR

    NUM  shift, and go to state 84
    VAR  shift, and go to state 85


State 51

   47 div_expr: NUM '/' • NUM
   48         | NUM '/' • VAR

    NUM  shift, and go to state 86
    VAR  shift, and go to state 87


State 52

   89 return: RETURN NUM ';' •

    $default  reduce using rule 89 (return)


State 53

   33 add_expr: VAR '+' • VAR
   34         | VAR '+' • NUM

    NUM  shift, and go to state 88
    VAR  shift, and go to state 89


State 54

   37 sub_expr: VAR '-' • VAR
   38         | VAR '-' • NUM

    NUM  shift, and go to state 90
    VAR  shift, and go to state 91


State 55

   41 mul_expr: VAR '*' • VAR
   42         | VAR '*' • NUM

    NUM  shift, and go to state 92
    VAR  shift, and go to state 93


State 56

   45 div_expr: VAR '/' • VAR
   46         | VAR '/' • NUM

    NUM  shift, and go to state 94
    VAR  shift, and go to state 95


State 57

   35 add_expr: NUM • '+' NUM
   36         | NUM • '+' VAR
   39 sub_expr: NUM • '-' NUM
   40         | NUM • '-' VAR
   43 mul_expr: NUM • '*' NUM
   44         | NUM • '*' VAR
   47 div_expr: NUM • '/' NUM
   48         | NUM • '/' VAR
   88 return: RETURN '(' NUM • ')' ';'

    ')'  shift, and go to state 96
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51


State 58

   86 return: RETURN '(' arith_expression • ')' ';'

    ')'  shift, and go to state 97


State 59

   87 return: RETURN arith_expression ';' •

    $default  reduce using rule 87 (return)


State 60

   80 kfunc_call: KFUNC '(' VAR • ')' ';'

    ')'  shift, and go to state 98


State 61

   79 kfunc_call: KFUNC '(' ')' • ';'

    ';'  shift, and go to state 99


State 62

   56 lt_expr: NUM • '<' NUM
   57        | NUM • '<' VAR
   60 gt_expr: NUM • '>' NUM
   61        | NUM • '>' VAR
   64 leq_expr: NUM • LEQ_OPTR NUM
   65         | NUM • LEQ_OPTR VAR
   68 geq_expr: NUM • GEQ_OPTR NUM
   69         | NUM • GEQ_OPTR VAR
   72 eq_expr: NUM • EQ_OPTR NUM
   73        | NUM • EQ_OPTR VAR

    LEQ_OPTR  shift, and go to state 100
    GEQ_OPTR  shift, and go to state 101
    EQ_OPTR   shift, and go to state 102
    '<'       shift, and go to state 103
    '>'       shift, and go to state 104


State 63

   54 lt_expr: VAR • '<' VAR
   55        | VAR • '<' NUM
   58 gt_expr: VAR • '>' VAR
   59        | VAR • '>' NUM
   62 leq_expr: VAR • LEQ_OPTR VAR
   63         | VAR • LEQ_OPTR NUM
   66 geq_expr: VAR • GEQ_OPTR VAR
   67         | VAR • GEQ_OPTR NUM
   70 eq_expr: VAR • EQ_OPTR VAR
   71        | VAR • EQ_OPTR NUM

    LEQ_OPTR  shift, and go to state 105
    GEQ_OPTR  shift, and go to state 106
    EQ_OPTR   shift, and go to state 107
    '<'       shift, and go to state 108
    '>'       shift, and go to state 109


State 64

   28 while_statement: WHILE '(' bool_expression • ')'

    ')'  shift, and go to state 110


State 65

   49 bool_expression: lt_expr •

    $default  reduce using rule 49 (bool_expression)


State 66

   50 bool_expression: gt_expr •

    $default  reduce using rule 50 (bool_expression)


State 67

   51 bool_expression: leq_expr •

    $default  reduce using rule 51 (bool_expression)


State 68

   52 bool_expression: geq_expr •

    $default  reduce using rule 52 (bool_expression)


State 69

   53 bool_expression: eq_expr •

    $default  reduce using rule 53 (bool_expression)


State 70

   27 if_statement: IF '(' bool_expression • ')'

    ')'  shift, and go to state 111


State 71

   35 add_expr: NUM • '+' NUM
   36         | NUM • '+' VAR
   39 sub_expr: NUM • '-' NUM
   40         | NUM • '-' VAR
   43 mul_expr: NUM • '*' NUM
   44         | NUM • '*' VAR
   47 div_expr: NUM • '/' NUM
   48         | NUM • '/' VAR
   82 assignment: VAR '=' NUM • ';'

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 112


State 72

   33 add_expr: VAR • '+' VAR
   34         | VAR • '+' NUM
   37 sub_expr: VAR • '-' VAR
   38         | VAR • '-' NUM
   41 mul_expr: VAR • '*' VAR
   42         | VAR • '*' NUM
   45 div_expr: VAR • '/' VAR
   46         | VAR • '/' NUM
   83 assignment: VAR '=' VAR • ';'

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 113


State 73

   81 assignment: VAR '=' arith_expression • ';'

    ';'  shift, and go to state 114


State 74

   84 assignment: VAR '=' kfunc_call •

    $default  reduce using rule 84 (assignment)


State 75

   77 kfunc_declaration: types KFUNC '(' • ')' ';'
   78                  | types KFUNC '(' • types ')' ';'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    ')'       shift, and go to state 115

    types  go to state 116


State 76

   22 func_block: types VAR '(' • DATATYPE VAR ')' '{' code_statements '}'
   23           | types VAR '(' • ')' '{' code_statements '}'
   75 func_declaration: types VAR '(' • ')' ';'
   76                 | types VAR '(' • types VAR ')' ';'

    DATATYPE  shift, and go to state 117
    EXTERN    shift, and go to state 2
    ')'       shift, and go to state 118

    types  go to state 119


State 77

   74 var_declaration: types VAR ';' •

    $default  reduce using rule 74 (var_declaration)


State 78

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   15 if_else_block: if_statement '{' code_statements • '}' else_block
   16              | if_statement '{' code_statements • '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '}'       shift, and go to state 120

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 79

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   20 while_block: while_statement '{' code_statements • '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '}'       shift, and go to state 121

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 80

   35 add_expr: NUM '+' NUM •

    $default  reduce using rule 35 (add_expr)


State 81

   36 add_expr: NUM '+' VAR •

    $default  reduce using rule 36 (add_expr)


State 82

   39 sub_expr: NUM '-' NUM •

    $default  reduce using rule 39 (sub_expr)


State 83

   40 sub_expr: NUM '-' VAR •

    $default  reduce using rule 40 (sub_expr)


State 84

   43 mul_expr: NUM '*' NUM •

    $default  reduce using rule 43 (mul_expr)


State 85

   44 mul_expr: NUM '*' VAR •

    $default  reduce using rule 44 (mul_expr)


State 86

   47 div_expr: NUM '/' NUM •

    $default  reduce using rule 47 (div_expr)


State 87

   48 div_expr: NUM '/' VAR •

    $default  reduce using rule 48 (div_expr)


State 88

   34 add_expr: VAR '+' NUM •

    $default  reduce using rule 34 (add_expr)


State 89

   33 add_expr: VAR '+' VAR •

    $default  reduce using rule 33 (add_expr)


State 90

   38 sub_expr: VAR '-' NUM •

    $default  reduce using rule 38 (sub_expr)


State 91

   37 sub_expr: VAR '-' VAR •

    $default  reduce using rule 37 (sub_expr)


State 92

   42 mul_expr: VAR '*' NUM •

    $default  reduce using rule 42 (mul_expr)


State 93

   41 mul_expr: VAR '*' VAR •

    $default  reduce using rule 41 (mul_expr)


State 94

   46 div_expr: VAR '/' NUM •

    $default  reduce using rule 46 (div_expr)


State 95

   45 div_expr: VAR '/' VAR •

    $default  reduce using rule 45 (div_expr)


State 96

   88 return: RETURN '(' NUM ')' • ';'

    ';'  shift, and go to state 122


State 97

   86 return: RETURN '(' arith_expression ')' • ';'

    ';'  shift, and go to state 123


State 98

   80 kfunc_call: KFUNC '(' VAR ')' • ';'

    ';'  shift, and go to state 124


State 99

   79 kfunc_call: KFUNC '(' ')' ';' •

    $default  reduce using rule 79 (kfunc_call)


State 100

   64 leq_expr: NUM LEQ_OPTR • NUM
   65         | NUM LEQ_OPTR • VAR

    NUM  shift, and go to state 125
    VAR  shift, and go to state 126


State 101

   68 geq_expr: NUM GEQ_OPTR • NUM
   69         | NUM GEQ_OPTR • VAR

    NUM  shift, and go to state 127
    VAR  shift, and go to state 128


State 102

   72 eq_expr: NUM EQ_OPTR • NUM
   73        | NUM EQ_OPTR • VAR

    NUM  shift, and go to state 129
    VAR  shift, and go to state 130


State 103

   56 lt_expr: NUM '<' • NUM
   57        | NUM '<' • VAR

    NUM  shift, and go to state 131
    VAR  shift, and go to state 132


State 104

   60 gt_expr: NUM '>' • NUM
   61        | NUM '>' • VAR

    NUM  shift, and go to state 133
    VAR  shift, and go to state 134


State 105

   62 leq_expr: VAR LEQ_OPTR • VAR
   63         | VAR LEQ_OPTR • NUM

    NUM  shift, and go to state 135
    VAR  shift, and go to state 136


State 106

   66 geq_expr: VAR GEQ_OPTR • VAR
   67         | VAR GEQ_OPTR • NUM

    NUM  shift, and go to state 137
    VAR  shift, and go to state 138


State 107

   70 eq_expr: VAR EQ_OPTR • VAR
   71        | VAR EQ_OPTR • NUM

    NUM  shift, and go to state 139
    VAR  shift, and go to state 140


State 108

   54 lt_expr: VAR '<' • VAR
   55        | VAR '<' • NUM

    NUM  shift, and go to state 141
    VAR  shift, and go to state 142


State 109

   58 gt_expr: VAR '>' • VAR
   59        | VAR '>' • NUM

    NUM  shift, and go to state 143
    VAR  shift, and go to state 144


State 110

   28 while_statement: WHILE '(' bool_expression ')' •

    $default  reduce using rule 28 (while_statement)


State 111

   27 if_statement: IF '(' bool_expression ')' •

    $default  reduce using rule 27 (if_statement)


State 112

   82 assignment: VAR '=' NUM ';' •

    $default  reduce using rule 82 (assignment)


State 113

   83 assignment: VAR '=' VAR ';' •

    $default  reduce using rule 83 (assignment)


State 114

   81 assignment: VAR '=' arith_expression ';' •

    $default  reduce using rule 81 (assignment)


State 115

   77 kfunc_declaration: types KFUNC '(' ')' • ';'

    ';'  shift, and go to state 145


State 116

   25 types: types • DATATYPE
   78 kfunc_declaration: types KFUNC '(' types • ')' ';'

    DATATYPE  shift, and go to state 41
    ')'       shift, and go to state 146


State 117

   22 func_block: types VAR '(' DATATYPE • VAR ')' '{' code_statements '}'
   26 types: DATATYPE •

    VAR  shift, and go to state 147

    VAR       [reduce using rule 26 (types)]
    $default  reduce using rule 26 (types)


State 118

   23 func_block: types VAR '(' ')' • '{' code_statements '}'
   75 func_declaration: types VAR '(' ')' • ';'

    '{'  shift, and go to state 148
    ';'  shift, and go to state 149


State 119

   25 types: types • DATATYPE
   76 func_declaration: types VAR '(' types • VAR ')' ';'

    DATATYPE  shift, and go to state 41
    VAR       shift, and go to state 150


State 120

   15 if_else_block: if_statement '{' code_statements '}' • else_block
   16              | if_statement '{' code_statements '}' •

    ELSE  shift, and go to state 151

    $default  reduce using rule 16 (if_else_block)

    else_block  go to state 152


State 121

   20 while_block: while_statement '{' code_statements '}' •

    $default  reduce using rule 20 (while_block)


State 122

   88 return: RETURN '(' NUM ')' ';' •

    $default  reduce using rule 88 (return)


State 123

   86 return: RETURN '(' arith_expression ')' ';' •

    $default  reduce using rule 86 (return)


State 124

   80 kfunc_call: KFUNC '(' VAR ')' ';' •

    $default  reduce using rule 80 (kfunc_call)


State 125

   64 leq_expr: NUM LEQ_OPTR NUM •

    $default  reduce using rule 64 (leq_expr)


State 126

   65 leq_expr: NUM LEQ_OPTR VAR •

    $default  reduce using rule 65 (leq_expr)


State 127

   68 geq_expr: NUM GEQ_OPTR NUM •

    $default  reduce using rule 68 (geq_expr)


State 128

   69 geq_expr: NUM GEQ_OPTR VAR •

    $default  reduce using rule 69 (geq_expr)


State 129

   72 eq_expr: NUM EQ_OPTR NUM •

    $default  reduce using rule 72 (eq_expr)


State 130

   73 eq_expr: NUM EQ_OPTR VAR •

    $default  reduce using rule 73 (eq_expr)


State 131

   56 lt_expr: NUM '<' NUM •

    $default  reduce using rule 56 (lt_expr)


State 132

   57 lt_expr: NUM '<' VAR •

    $default  reduce using rule 57 (lt_expr)


State 133

   60 gt_expr: NUM '>' NUM •

    $default  reduce using rule 60 (gt_expr)


State 134

   61 gt_expr: NUM '>' VAR •

    $default  reduce using rule 61 (gt_expr)


State 135

   63 leq_expr: VAR LEQ_OPTR NUM •

    $default  reduce using rule 63 (leq_expr)


State 136

   62 leq_expr: VAR LEQ_OPTR VAR •

    $default  reduce using rule 62 (leq_expr)


State 137

   67 geq_expr: VAR GEQ_OPTR NUM •

    $default  reduce using rule 67 (geq_expr)


State 138

   66 geq_expr: VAR GEQ_OPTR VAR •

    $default  reduce using rule 66 (geq_expr)


State 139

   71 eq_expr: VAR EQ_OPTR NUM •

    $default  reduce using rule 71 (eq_expr)


State 140

   70 eq_expr: VAR EQ_OPTR VAR •

    $default  reduce using rule 70 (eq_expr)


State 141

   55 lt_expr: VAR '<' NUM •

    $default  reduce using rule 55 (lt_expr)


State 142

   54 lt_expr: VAR '<' VAR •

    $default  reduce using rule 54 (lt_expr)


State 143

   59 gt_expr: VAR '>' NUM •

    $default  reduce using rule 59 (gt_expr)


State 144

   58 gt_expr: VAR '>' VAR •

    $default  reduce using rule 58 (gt_expr)


State 145

   77 kfunc_declaration: types KFUNC '(' ')' ';' •

    $default  reduce using rule 77 (kfunc_declaration)


State 146

   78 kfunc_declaration: types KFUNC '(' types ')' • ';'

    ';'  shift, and go to state 153


State 147

   22 func_block: types VAR '(' DATATYPE VAR • ')' '{' code_statements '}'

    ')'  shift, and go to state 154


State 148

   23 func_block: types VAR '(' ')' '{' • code_statements '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    code_statements    go to state 155
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 149

   75 func_declaration: types VAR '(' ')' ';' •

    $default  reduce using rule 75 (func_declaration)


State 150

   76 func_declaration: types VAR '(' types VAR • ')' ';'

    ')'  shift, and go to state 156


State 151

   18 else_block: ELSE • code_statements
   19           | ELSE • '{' code_statements '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '{'       shift, and go to state 157

    code_statements    go to state 158
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 152

   15 if_else_block: if_statement '{' code_statements '}' else_block •

    $default  reduce using rule 15 (if_else_block)


State 153

   78 kfunc_declaration: types KFUNC '(' types ')' ';' •

    $default  reduce using rule 78 (kfunc_declaration)


State 154

   22 func_block: types VAR '(' DATATYPE VAR ')' • '{' code_statements '}'

    '{'  shift, and go to state 159


State 155

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   23 func_block: types VAR '(' ')' '{' code_statements • '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '}'       shift, and go to state 160

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 156

   76 func_declaration: types VAR '(' types VAR ')' • ';'

    ';'  shift, and go to state 161


State 157

   19 else_block: ELSE '{' • code_statements '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    code_statements    go to state 162
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 158

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   18 else_block: ELSE code_statements •

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    DATATYPE  [reduce using rule 18 (else_block)]
    EXTERN    [reduce using rule 18 (else_block)]
    RETURN    [reduce using rule 18 (else_block)]
    KFUNC     [reduce using rule 18 (else_block)]
    WHILE     [reduce using rule 18 (else_block)]
    IF        [reduce using rule 18 (else_block)]
    VAR       [reduce using rule 18 (else_block)]
    $default  reduce using rule 18 (else_block)

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 159

   22 func_block: types VAR '(' DATATYPE VAR ')' '{' • code_statements '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7

    code_statements    go to state 163
    code_statement     go to state 9
    if_else_block      go to state 10
    while_block        go to state 11
    func_block         go to state 12
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 160

   23 func_block: types VAR '(' ')' '{' code_statements '}' •

    $default  reduce using rule 23 (func_block)


State 161

   76 func_declaration: types VAR '(' types VAR ')' ';' •

    $default  reduce using rule 76 (func_declaration)


State 162

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   19 else_block: ELSE '{' code_statements • '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '}'       shift, and go to state 164

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 163

    1 code_statements: code_statements • code_statement
    2                | code_statements • if_else_block
    3                | code_statements • while_block
    4                | code_statements • func_block
   22 func_block: types VAR '(' DATATYPE VAR ')' '{' code_statements • '}'

    DATATYPE  shift, and go to state 1
    EXTERN    shift, and go to state 2
    RETURN    shift, and go to state 3
    KFUNC     shift, and go to state 4
    WHILE     shift, and go to state 5
    IF        shift, and go to state 6
    VAR       shift, and go to state 7
    '}'       shift, and go to state 165

    code_statement     go to state 37
    if_else_block      go to state 38
    while_block        go to state 39
    func_block         go to state 40
    types              go to state 13
    if_statement       go to state 14
    while_statement    go to state 15
    var_declaration    go to state 16
    func_declaration   go to state 17
    kfunc_declaration  go to state 18
    kfunc_call         go to state 19
    assignment         go to state 20
    return             go to state 21


State 164

   19 else_block: ELSE '{' code_statements '}' •

    $default  reduce using rule 19 (else_block)


State 165

   22 func_block: types VAR '(' DATATYPE VAR ')' '{' code_statements '}' •

    $default  reduce using rule 22 (func_block)
